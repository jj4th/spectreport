{"version":3,"sources":["spectreport.min.js","spectreport.js"],"names":["_createClass","require","_classCallCheck","_Object$assign","_Object$getOwnPropertyNames","_getIterator","global","factory","exports","module","define","amd","spectreport","this","Stats","tests","arguments","length","undefined","pending","failures","duration","timeStart","timeStop","key","value","stats","obj","Test","test","status","err","_this","title","String","fullTitle","Math","round","error","forEach","fakeTest","TEST_PENDING","TEST_PASS","TEST_FAIL","Suite","suite","parent","suites","add","hasTests","push","addStats","Date","now","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","copy","fromObject","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","child","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_fs","_path","Aggregator","jsonDir","suiteTitle","results","lookupKeyPaths","fileList","files","readdirSync","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","file","join","statSync","isDirectory","listFiles","indexOf","keyPath","jsonObj","lookup","cursor","addSuite","fixTimeStats","pop","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","dir","relative","dirname","split","sep","readJsonSync","addJsonObject","ex","Error","message","addJsonFileList","fs","dot","path","defaults","outputHtml","template","__dirname","Spectreport","opts","aggregator","scan","tpl","readFileSync","render","reportHtml","report","writeFileSync","DefaultOptions"],"mappings":"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","file":"spectreport.min.js","sourcesContent":[null,"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.spectreport = factory();\n}(this, function () { 'use strict';\n\n    class Stats {\n        constructor(tests = 0, pending = 0, failures = 0, duration = 0) {\n            this.tests = tests;\n            this.pending = pending;\n            this.failures = failures;\n            this.duration = duration;\n            this.timeStart = null;\n            this.timeStop = null;\n        }\n        add(stats) {\n            this.tests += stats.tests;\n            this.pending += stats.pending;\n            this.failures += stats.failures;\n        }\n        static fromObject(obj) {\n            let stats = new Stats();\n            return Object.assign(stats, obj);\n        }\n    }\n\n    class Test {\n        constructor(test, status, err) {\n            this.status = status;\n            this.title = String(test.title);\n            this.fullTitle = test.fullTitle();\n            this.duration = Math.round(test.duration / 10) / 100;\n            this.error = null;\n\n            if(err) {\n                this.error = {};\n                Object.getOwnPropertyNames(err).forEach(key => {\n                    this.error[key] = err[key];\n                });\n            }\n        }\n        static fromObject(obj) {\n            // Construct faux test object\n            let fakeTest = {\n                fullTitle: () => { return null; }\n            };\n\n            if(obj.error === undefined || obj.error === null) {\n                delete obj.error;\n            }\n\n            let test = new Test(fakeTest);\n            return Object.assign(test, obj);\n        }\n    }\n\n    Test.TEST_PENDING = 2;\n    Test.TEST_PASS = 1;\n    Test.TEST_FAIL = 0;\n\n    class Suite {\n        constructor(suite, parent) {\n            this.title = suite.title;\n            this.suites = [];\n            this.tests = [];\n            this.parent = parent;\n            this.stats = new Stats();\n        }\n        addStats(stats) {\n            this.stats.add(stats);\n        }\n        addSuite(suite) {\n            if (!suite.hasTests()) {\n                return false;\n            }\n            this.suites.push(suite);\n            this.addStats(suite.stats);\n        }\n        addTest(test) {\n            this.tests.push(test);\n            this.stats.tests++;\n\n            if (test.status === Test.TEST_PENDING) {\n                this.stats.pending++;\n            }\n            else if (test.status === Test.TEST_FAIL) {\n                this.stats.failures++;\n            }\n        }\n        hasTests() {\n            return (this.stats.tests > 0);\n        }\n        start(timeStart) {\n            this.stats.timeStart = timeStart || Date.now();\n        }\n        stop(timeStop, duration) {\n            if(!duration && !this.stats.timeStart > 0) {\n                return false;\n            }\n            this.stats.timeStop = timeStop || Date.now();\n            this.stats.duration = duration || Math.round((this.stats.timeStop - this.stats.timeStart) / 10) / 100;\n        }\n        fixTimeStats() {\n            for (let suite of this.suites) {\n                if (this.stats.timeStart === null || this.stats.timeStart > suite.stats.timeStart) {\n                    this.stats.timeStart = suite.stats.timeStart;\n                }\n                if (this.stats.timeStop === null || this.stats.timeStop < suite.stats.timeStop) {\n                    this.stats.timeStop = suite.stats.timeStop;\n                }\n                this.stats.duration = Math.round((this.stats.timeStop - this.stats.timeStart) / 10) / 100;\n            }\n        }\n        toJSON() {\n            // Generate a clean, shallow copy without the parent\n            let copy = {\n                title: this.title,\n                suites: this.suites,\n                tests: this.tests,\n                stats: this.stats\n            };\n\n            return copy;\n        }\n        static fromObject(obj, parent) {\n\n            let suite = new Suite(obj, parent);\n            let suites = [];\n            let tests = [];\n            let stats = null;\n\n            stats = Stats.fromObject(obj.stats);\n            Object.assign(suite, {stats: stats});\n\n            for (let child of obj.suites) {\n                suites.push(Suite.fromObject(child, suite));\n            }\n            Object.assign(suite, {suites: suites});\n\n            for (let test of obj.tests) {\n                tests.push(Test.fromObject(test));\n            }\n            Object.assign(suite, {tests: tests});\n\n            return suite;\n        }\n    }\n\n    const _fs = require('fs-extra');\n    const _path = require('path');\n\n    class Aggregator {\n        constructor(jsonDir, suiteTitle) {\n            this.jsonDir = jsonDir;\n            this.results = new Suite({title: suiteTitle});\n            this.lookupKeyPaths = {};\n        }\n\n        // List all files in a directory in Node.js recursively in a synchronous fashion\n        listFiles(jsonDir, fileList) {\n            jsonDir = jsonDir || this.jsonDir;\n            fileList = fileList || [];\n\n            let files = _fs.readdirSync(jsonDir);\n\n            for(let file of files) {\n                file = _path.join(jsonDir, file);\n                if (_fs.statSync(file).isDirectory()) {\n                    fileList = this.listFiles(file, fileList);\n                } else if (file.indexOf('.json') > 0) {\n                    fileList.push(file);\n                }\n            }\n\n            return fileList;\n        }\n\n        addJsonObject(keyPath, jsonObj) {\n            let lookup = this.lookupKeyPaths,\n                suite = Suite.fromObject(jsonObj),\n                cursor = suite,\n                parent;\n\n            while (keyPath.length) {\n                parent = lookup[keyPath.join('|')];\n\n                if (!parent) {\n                    let key = keyPath[keyPath.length - 1];\n                    parent = new Suite({title: key});\n                    lookup[keyPath.join('|')] = parent;\n                }\n\n                if (cursor.parent !== parent) {\n                    cursor.parent = parent;\n                    parent.addSuite(cursor);\n                } else {\n                    parent.addStats(suite.stats);\n                }\n\n                parent.fixTimeStats();\n                cursor = parent;\n                keyPath.pop();\n            }\n\n            parent = this.results;\n            if (cursor.parent !== parent) {\n                cursor.parent = parent;\n                parent.addSuite(cursor);\n            } else {\n                parent.addStats(suite.stats);\n            }\n            parent.fixTimeStats();\n        }\n\n        addJsonFileList(fileList) {\n            for (let file of fileList) {\n                let dir = _path.relative(this.jsonDir, _path.dirname(file));\n                let keyPath = dir.split(_path.sep);\n                let jsonObj = null;\n\n                try {\n                    jsonObj = _fs.readJsonSync(file);\n                    this.addJsonObject(keyPath, jsonObj);\n                } catch (ex) {\n                    throw new Error('There was a problem reading a results file: ' + file + '.\\n' + ex.message);\n                }\n            }\n        }\n\n        scan() {\n            let fileList = null;\n\n            try {\n                fileList = this.listFiles();\n            } catch (ex) {\n                throw new Error('There was a problem reading the results directory.\\n' + ex.message);\n            }\n\n            this.addJsonFileList(fileList);\n            return this.results;\n        }\n    }\n\n    const fs = require('fs-extra');\n    const dot = require('dot');\n    const path = require('path');\n\n    const defaults = {\n        outputHtml: 'test/results/index.html',\n        jsonDir: 'test/results',\n        template: path.join(path.relative('.', __dirname), 'assets/results.dot'),\n        suiteTitle: 'Test Results'\n    };\n\n    class Spectreport {\n        constructor(opts) {\n            this.results = null;\n            this.opts = Object.assign({}, defaults, opts);\n            this.aggregator = new Aggregator(this.opts.jsonDir, this.opts.suiteTitle);\n        }\n\n        scan() {\n            try {\n                this.results = this.aggregator.scan();\n            } catch (ex) {\n                ex.message = 'There was a problem aggregating the JSON results.\\n' + ex.message;\n                throw ex;\n            }\n\n            if (!this.results || !this.results.stats) {\n                throw new Error('No results were found.  Did you run the tests?');\n            }\n        }\n\n        report() {\n            if(!this.results) {\n                this.scan();\n            }\n\n            try {\n                let tpl = fs.readFileSync(this.opts.template);\n                let render = dot.template(tpl);\n                this.reportHtml = render(this.results);\n            } catch (ex) {\n                ex.message = 'There was a problem rendering the HTML report.\\n' + ex.message;\n                throw ex;\n            }\n        }\n\n        output(outputHtml) {\n            if(!this.reportHtml) {\n                this.report();\n            }\n\n            outputHtml = outputHtml || this.opts.outputHtml;\n\n            try {\n                fs.writeFileSync(outputHtml, this.reportHtml);\n            } catch (ex) {\n                ex.message = 'There was a problem outputting the HTML report to disk.\\n' + ex.message;\n                throw ex;\n            }\n        }\n\n        summary() {\n            if(!this.results) {\n                this.scan();\n            }\n\n            return this.results.stats;\n        }\n    }\n\n    Spectreport.Stats = Stats;\n    Spectreport.Suite = Suite;\n    Spectreport.Test = Test;\n    Spectreport.DefaultOptions = defaults;\n\n    return Spectreport;\n\n}));"],"sourceRoot":"/source/"}